plot(cars)
data()
olimpiadas <- read.csv("data/olimpiadas_brasil.csv", sep = ",", header=TRUE)
head(olimpiadas, 5)
olimpiadas$total
barplot(olimpiadas$total)
barplot(olimpiadas$total, names.arg = olimpiadas$ano)
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col='green4', border=NA, xlab="Ano", ylab="Total de Medalhas")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$ouro[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#D6AF36")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas")
plot(cars)
data()
olimpiadas <- read.csv("data/olimpiadas_brasil.csv", sep = ",", header=TRUE)
head(olimpiadas, 5)
olimpiadas$total
barplot(olimpiadas$total)
barplot(olimpiadas$total, names.arg = olimpiadas$ano)
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col='green4', border=NA, xlab="Ano", ylab="Total de Medalhas")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$ouro[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#D6AF36")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$prata[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A7A7AD")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Prata")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$bronze[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A7A7AD")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$bronze[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A77044")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$ouro[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#D6AF36")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
Após executar o código acima, passe o vetor cores_preenchimento no argumento col do barplot()
```{r}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$prata[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A7A7AD")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Prata")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$bronze[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A77044")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
![](ouro.png)
![](/ouro.png)
![ouro.png]
!["ouro"](ouro.png)
![](ouro.png)
![ouro](ouro.png)
![ouro](/ouro.png)
![ouro](/home/rafael/git/pos_visualizacao_de_dados/introducao/ouro.png)
![ouro](introducao/ouro.png)
![ouro]()
![]('ouro.png')
![]['ouro.png']
![image]['ouro.png']
[![image]['ouro.png']]
[![][ouro.png]]
[![](ouro.png)]
![](ouro.png)
![](ouro.png)
```{r}
postscript("ouro")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
dev.off()
dev.off()
postscript("bar_plot")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
dev.off()
postscript("bar_plot")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
dev.off()
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
ouro <- read.image("ouro.png")
library(rimage)
data("AirPassengers")
View(AirPassengers)
plot(AirPassengers)
boxplot(AirPassengers~cycle(AirPassengers))
plot(log(AirPassengers))
par(mfrow = c(1,2))
acf(log(AirPassengers))
pacf(log(AirPassengers))
par(mfrow = c(1,3))
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
par(mfrow = c(2,3))
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
renderPlot({
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
})
```{r echo = FALSE}
renderPlot({
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", height = ylab="Total de Medalhas de Bronze")
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
renderPlot({
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", height = ylab="Total de Medalhas de Bronze")
renderPlot({
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
})
barplot(GNP ~ Year, data = longley)
barplot(cbind(Employed, Unemployed) ~ Year, data = longley)
## 3rd form of formula - 2 categories :
op <- par(mfrow = 2:1, mgp = c(3,1,0)/2, mar = .1+c(3,3:1))
summary(d.Titanic <- as.data.frame(Titanic))
barplot(Freq ~ Class + Survived, data = d.Titanic,
subset = Age == "Adult" & Sex == "Male",
main = "barplot(Freq ~ Class + Survived, *)", ylab = "# {passengers}", legend = TRUE)
# Corresponding table :
(xt <- xtabs(Freq ~ Survived + Class + Sex, d.Titanic, subset = Age=="Adult"))
# Alternatively, a mosaic plot :
mosaicplot(xt[,,"Male"], main = "mosaicplot(Freq ~ Class + Survived, *)", color=TRUE)
par(op)
# Default method
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
#- type = "h" plotting *is* 'bar'plot
lines(r, tN, type = "h", col = "red", lwd = 2)
barplot(tN, space = 1.5, axisnames = FALSE,
sub = "barplot(..., space= 1.5, axisnames = FALSE)")
barplot(VADeaths, plot = FALSE)
barplot(VADeaths, plot = FALSE, beside = TRUE)
mp <- barplot(VADeaths) # default
tot <- colMeans(VADeaths)
text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
barplot(VADeaths, beside = TRUE,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"),
legend = rownames(VADeaths), ylim = c(0, 100))
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$bronze[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A77044")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
plot(cars)
data()
olimpiadas <- read.csv("data/olimpiadas_brasil.csv", sep = ",", header=TRUE)
head(olimpiadas, 5)
olimpiadas$total
barplot(olimpiadas$total)
barplot(olimpiadas$total, names.arg = olimpiadas$ano)
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col='green4', border=NA, xlab="Ano", ylab="Total de Medalhas")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$ouro[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#D6AF36")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$prata[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A7A7AD")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Prata")
par(mfrow=c(1,3), mar=c(4,4,1,0))
hist(olimpiadas$ouro, breaks=30 , xlim=c(0,300) , col=rgb(1,0,0,0.5) , xlab="height" , ylab="nbr of plants" , main="" )
hist(olimpiadas$ouro)
#Create data
set.seed(1)
Ixos=rnorm(4000 , 120 , 30)
Primadur=rnorm(4000 , 200 , 30)
# First distribution
hist(Ixos, breaks=30, xlim=c(0,300), col=rgb(1,0,0,0.5), xlab="height",
ylab="nbr of plants", main="distribution of height of 2 durum wheat varieties" )
# Second with add=T to plot on top
hist(Primadur, breaks=30, xlim=c(0,300), col=rgb(0,0,1,0.5), add=T)
# Add legend
legend("topright", legend=c("Ixos","Primadur"), col=c(rgb(1,0,0,0.5),
rgb(0,0,1,0.5)), pt.cex=2, pch=15 )
```{r}
library(ggplot2)
ggplot(data = olimpiadas) +
geom_point(mapping = aes(x = ano, y = total, color = class))
ggplot(data = olimpiadas) +
geom_point(mapping = aes(x = olimpiadas$ano, y = olimpiadas$total, color = class))
ggplot(data = olimpiadas) +
geom_point(mapping = aes(x = olimpiadas$ano, y = olimpiadas$total))
ggplot(data = olimpiadas) +
geom_point(mapping = aes(x = olimpiadas$ouro, y = olimpiadas$total))
ggplot(data = olimpiadas) +
geom_point(mapping = aes(x = olimpiadas$ano, y = olimpiadas$total))
olimpiadas$ouro.
count(olimpiadas$ouro)
olimpiadas
olimpiadas$ouro
sum(olimpiadas$ouro)
sum(olimpiadas$prata)
sum(olimpiadas$ouro),sum(olimpiadas$prata)
sum(olimpiadas$ouro, olimpiadas$prata)
plot(sum(olimpiadas$ouro))
boxplot(sum(olimpiadas$ouro))
barplot(sum(olimpiadas$ouro))
barplot(olimpiadas$ouro)
count <- table(olimpiadas$ouro, olimpiadas$prata, olimpiadas$bronze)
count
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("#D6AF36","#A7A7AD" ,"#A77044"),
legend = rownames(counts))
barplot(count, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("#D6AF36","#A7A7AD" ,"#A77044"),
legend = rownames(counts))
count <- table(olimpiadas$ouro, olimpiadas$prata)
barplot(count, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("#D6AF36","#A7A7AD" ,"#A77044"),
legend = rownames(counts))
barplot(count, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("#D6AF36","#A7A7AD" ,"#A77044"),
legend = rownames(count))
count <- table(olimpiadas$ouro, olimpiadas$prata, olimpiadas$bronze)
barplot(count, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("#D6AF36","#A7A7AD" ,"#A77044"),
legend = rownames(count))
barplot(count, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("#D6AF36","#A7A7AD" ,"#A77044"),
legend = rownames(count), beside=TRUE)
barplot(count, col=c("#D6AF36","#A7A7AD" ,"#A77044"), legend = rownames(count), beside=TRUE)
#count <- table(olimpiadas$ouro, olimpiadas$prata, olimpiadas$bronze)
count <- table(olimpiadas$ouro, olimpiadas$prata)
barplot(count, col=c("#D6AF36","#A7A7AD" ,"#A77044"), legend = rownames(count), beside=TRUE)
barplot(count, col=c("#D6AF36","#A7A7AD" ), legend = rownames(count), beside=TRUE)
barplot(count, col=c("#D6AF36","#A7A7AD" ), beside=TRUE)
hist(count, col=c("#D6AF36","#A7A7AD" ), beside=TRUE)
count <- table(olimpiadas$ouro, olimpiadas$prata, olimpiadas$bronze)
hist(count, col=c("#D6AF36","#A7A7AD" ), beside=TRUE)
setwd("~/git/pos_visualizacao")
setwd("~/git/pos_visualizacao/imagens")
install.packages("tidyverse")
install.packages("ggplot2")
# Carrega o ggplot2
library(ggplot2)
![](img/barchart.png)
# Chunk 1
install.packages("tidyverse")
# Chunk 2
install.packages("ggplot2")
# Chunk 3
# Carrega o ggplot2
library(ggplot2)
install.packages("ggplot2")
plot(car)
plot(cars)
plot(cars)
cars
plot(cars)
data()
olimpiadas <- read.csv("data/olimpiadas_brasil.csv", sep = ",", header=TRUE)
head(olimpiadas, 5)
olimpiadas$total
barplot(olimpiadas$total)
barplot(olimpiadas$total, names.arg = olimpiadas$ano)
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col='green4', border=NA, xlab="Ano", ylab="Total de Medalhas")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$ouro[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#D6AF36")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Ouro")
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$prata[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A7A7AD")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Prata")
barplot(olimpiadas$ouro, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
total
m
m
cores_preenchimento <- c() # inicia um vetor vazio
for (i in 1:length(olimpiadas$ano)) {
if(olimpiadas$bronze[i] > 0) {
cores_preenchimento <- c(cores_preenchimento, "#A77044")
} else {
cores_preenchimento <- c(cores_preenchimento, "#CCCCCC")
}
}
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
barplot(olimpiadas$total, names.arg = olimpiadas$ano, col=cores_preenchimento, border=NA, xlab="Ano", ylab="Total de Medalhas de Bronze")
unlink('2_graficos_cache', recursive = TRUE)
setwd("~/git/pos_visualizacao/imagens")
setwd("~/git/pos_visualizacao/imagens")
# Chunk 1
# install.packages("tidyverse")
# Chunk 2
# install.packages("ggplot2")
